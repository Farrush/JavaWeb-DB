/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.92
 * Generated at: 2023-10-15 12:36:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import classes.Conexao;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.Connection;

public final class carregarPet_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("classes.Conexao");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"width=device-width; initial-scale=1.0\" charset=UTF-8\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"./assets/css/lista.css\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"./assets/css/reset.css\"/>\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"./assets/css/erros.css\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"./assets/css/formu.css\"/>\r\n");
      out.write("                <style>\r\n");
      out.write("            .sem-cachorro{\r\n");
      out.write("                background-color: #FFF;\r\n");
      out.write("                padding: 20px;\r\n");
      out.write("                margin: 15px auto;\r\n");
      out.write("                width: 100%;\r\n");
      out.write("                height: 70%;\r\n");
      out.write("                border-radius: 30px;\r\n");
      out.write("            }\r\n");
      out.write("            .img-sem-cachorro{\r\n");
      out.write("                width: 100%;\r\n");
      out.write("            }\r\n");
      out.write("        </style>\r\n");
      out.write("        <title>Dogspace - Alterar</title>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("        <form action=\"alterar.jsp\">\r\n");
      out.write("            <h1>Altere os dados</h1>\r\n");
      out.write("        ");

            int id = Integer.parseInt(request.getParameter("cod"));
            Conexao conexao = new Conexao();
            Connection con = conexao.abreConec();
            PreparedStatement st;

            try {
                st = con.prepareStatement("select * from animal where id = ?");
                st.setInt(1,id);
                ResultSet rs = st.executeQuery();
                if(!rs.isBeforeFirst()){
                    
      out.write("\r\n");
      out.write("                        <div class=\"sem-cachorro\">\r\n");
      out.write("                            <h2>Cachorro não encontrado</h2>\r\n");
      out.write("                            <img class=\"img-sem-cachorro\" src=\"./assets/img/dog-desastrado.png\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                    ");

                } else {
                    while(rs.next()){
                    String nome = rs.getString("nome");
                    String raca = rs.getString("raca");
                    String idade = rs.getString("idade");
                    String peso = rs.getString("peso");
                    String sexo = rs.getString("sexo");
              
                    
      out.write("\r\n");
      out.write("                        <div class=\"input-field\">\r\n");
      out.write("                            <label for=\"cod\">Id</label>\r\n");
      out.write("                            <input placeholder=\"Ex: 1\" type=\"number\" value=\"");
      out.print( id);
      out.write("\" id=\"cod\" name=\"cod\" readonly>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"input-field\">\r\n");
      out.write("                            <label for=\"nome\">Nome</label>\r\n");
      out.write("                            <input placeholder=\"Ex: Spike\" maxlength=\"40\" value=\"");
      out.print( nome);
      out.write("\" type=\"text\" id=\"nome\" name=\"nome\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"input-field\">\r\n");
      out.write("                            <label for=\"sexo\">Sexo</label>\r\n");
      out.write("                            <select name=\"sexo\" id=\"sexo\">\r\n");
      out.write("                                <option value=\"Macho\" ");
      out.print( "Macho".equals(sexo) ? "selected" : "" );
      out.write(">Macho</option>\r\n");
      out.write("                                <option value=\"Fêmea\" ");
      out.print( "Fêmea".equals(sexo) ? "selected" : "" );
      out.write(">Fêmea</option>\r\n");
      out.write("                            </select>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"input-field\">\r\n");
      out.write("                            <label for=\"idade\">Idade</label>\r\n");
      out.write("                            <input type=\"number\" placeholder=\"Ex: 2\" value=\"");
      out.print( idade);
      out.write("\" max=\"30\" min=\"0\" id=\"idade\" name=\"idade\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"input-field\">\r\n");
      out.write("                            <label for=\"peso\">Peso</label>\r\n");
      out.write("                            <input placeholder=\"Ex: 5.84\" value=\"");
      out.print( peso);
      out.write("\" type=\"number\" min=\"0\" step=\"0.1\" id=\"peso\" name=\"peso\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"input-field\">\r\n");
      out.write("                            <label for=\"raca\">Raça</label>\r\n");
      out.write("                            <select name=\"raca\" id=\"raca\">\r\n");
      out.write("                                <option value=\"Pinscher\" ");
      out.print( "Pinscher".equals(raca) ? "selected" : "" );
      out.write(">Pinscher</option>\r\n");
      out.write("                                <option value=\"Pug\" ");
      out.print( "Pug".equals(raca) ? "selected" : "" );
      out.write(">Pug</option>\r\n");
      out.write("                                <option value=\"SRD (Sem Raça Definida)\" ");
      out.print( "SRD (Sem Raça Definida)".equals(raca) ? "selected" : "" );
      out.write(">SRD</option>\r\n");
      out.write("                                <option value=\"Bulldog\" ");
      out.print( "Bulldog".equals(raca) ? "selected" : "" );
      out.write(">Bulldog</option>\r\n");
      out.write("                                <option value=\"Shih Tzu\" ");
      out.print( "Shih Tzu".equals(raca) ? "selected" : "" );
      out.write(">Shih Tzu</option>\r\n");
      out.write("                                <option value=\"Yorkshire\" ");
      out.print( "Yorkshire".equals(raca) ? "selected" : "" );
      out.write(">Yorkshire</option>\r\n");
      out.write("                                <option value=\"Border Collie\" ");
      out.print( "Border Collie".equals(raca) ? "selected" : "" );
      out.write(">Border Collie</option>\r\n");
      out.write("                                <option value=\"Spitz Alemão\" ");
      out.print( "Spits Alemão".equals(raca) ? "selected" : "" );
      out.write(">Spitz Alemão</option>\r\n");
      out.write("                                <option value=\"Golden Retriever\" ");
      out.print( "Golden Retriever".equals(raca) ? "selected" : "" );
      out.write(">Golden Retriever</option>\r\n");
      out.write("                            </select>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"input-field submit\">\r\n");
      out.write("                            <input id=\"sub\" type=\"submit\" value=\"Alterar\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                    ");

                }
                    
                }
            } catch (Exception ex) {
                out.print("Erro: " + ex.getMessage());
            }
        
      out.write("\r\n");
      out.write("        </form>\r\n");
      out.write("    </body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
